From 91eba5ddab54663257bc91f497802dcda8754918 Mon Sep 17 00:00:00 2001
From: Matteo Battaggia <matteo.battaggia@spacetest.com>
Date: Wed, 29 Apr 2015 16:29:24 +0200
Subject: [PATCH] The "TON" signal must be raised as soon as possible by the
 bootloader. Other modifications for GPIO's, LED's, ...
 (WIP!)

---
 board/engicam/mx6_icore/mx6_icore.c |  272 +++++++++++++++++++++++++----------
 common/hush.c                       |    6 +-
 common/main.c                       |   12 +-
 drivers/video/cfb_console.c         |    2 +-
 imxcfg.imx                          |    2 +-
 include/configs/mx6_icore_common.h  |   36 ++---
 6 files changed, 227 insertions(+), 103 deletions(-)

diff --git a/board/engicam/mx6_icore/mx6_icore.c b/board/engicam/mx6_icore/mx6_icore.c
index a0a7d39..108d203 100644
--- a/board/engicam/mx6_icore/mx6_icore.c
+++ b/board/engicam/mx6_icore/mx6_icore.c
@@ -45,9 +45,6 @@
 
 #ifdef CONFIG_FASTBOOT
 #include <fastboot.h>
-#ifdef CONFIG_ANDROID_RECOVERY
-#include <recovery.h>
-#endif
 #endif /*CONFIG_FASTBOOT*/
 
 DECLARE_GLOBAL_DATA_PTR;
@@ -816,8 +813,188 @@ u32 get_board_rev(void)
 	return (0);
 }
 
+// MOD-MB-20150427 /////////////////////////////////////////////////////////////
+// BEGIN of changes for Space 20010 carrier board.
+
+// UNUSED PINS
+
+#define NOT_USED_PINS_CTRL  NO_PAD_CTRL
+
+iomux_v3_cfg_t const not_used_pins_pads[] = {
+	MX6_PAD_DI0_PIN4__GPIO_4_20     | MUX_PAD_CTRL(NOT_USED_PINS_CTRL), // NU1
+	MX6_PAD_EIM_D23__GPIO_3_23      | MUX_PAD_CTRL(NOT_USED_PINS_CTRL), // NU2
+	MX6_PAD_DISP0_DAT22__GPIO_5_16  | MUX_PAD_CTRL(NOT_USED_PINS_CTRL), // NU3
+	MX6_PAD_DI0_DISP_CLK__GPIO_4_16 | MUX_PAD_CTRL(NOT_USED_PINS_CTRL), // NU4
+	MX6_PAD_DISP0_DAT17__GPIO_5_11  | MUX_PAD_CTRL(NOT_USED_PINS_CTRL), // NU5
+	MX6_PAD_DISP0_DAT13__GPIO_5_7   | MUX_PAD_CTRL(NOT_USED_PINS_CTRL), // NU6
+	MX6_PAD_DISP0_DAT11__GPIO_5_5   | MUX_PAD_CTRL(NOT_USED_PINS_CTRL), // NU7
+	MX6_PAD_DISP0_DAT9__GPIO_4_30   | MUX_PAD_CTRL(NOT_USED_PINS_CTRL), // NU8
+	MX6_PAD_DISP0_DAT7__GPIO_4_28   | MUX_PAD_CTRL(NOT_USED_PINS_CTRL), // NU9
+	MX6_PAD_DI0_PIN2__GPIO_4_18     | MUX_PAD_CTRL(NOT_USED_PINS_CTRL), // NU10
+	MX6_PAD_GPIO_3__GPIO_1_3        | MUX_PAD_CTRL(NOT_USED_PINS_CTRL), // NU11
+	MX6_PAD_GPIO_6__GPIO_1_6        | MUX_PAD_CTRL(NOT_USED_PINS_CTRL), // NU12
+	MX6_PAD_GPIO_9__GPIO_1_9        | MUX_PAD_CTRL(NOT_USED_PINS_CTRL), // NU13
+};
+
+#define SPC20010_NU1   IMX_GPIO_NR(4, 20)
+#define SPC20010_NU2   IMX_GPIO_NR(3, 23)
+#define SPC20010_NU3   IMX_GPIO_NR(5, 16)
+#define SPC20010_NU4   IMX_GPIO_NR(4, 16)
+#define SPC20010_NU5   IMX_GPIO_NR(5, 11)
+#define SPC20010_NU6   IMX_GPIO_NR(5, 7)
+#define SPC20010_NU7   IMX_GPIO_NR(5, 5)
+#define SPC20010_NU8   IMX_GPIO_NR(4, 30)
+#define SPC20010_NU9   IMX_GPIO_NR(4, 28)
+#define SPC20010_NU10  IMX_GPIO_NR(4, 18)
+#define SPC20010_NU11  IMX_GPIO_NR(1, 3)
+#define SPC20010_NU12  IMX_GPIO_NR(1, 6)
+#define SPC20010_NU13  IMX_GPIO_NR(1, 9)
+
+#define SPC20010_TON  SPC20010_NU2
+
+static void spc20010_setup_not_used_pins(void)
+{
+	imx_iomux_v3_setup_multiple_pads(not_used_pins_pads, ARRAY_SIZE(not_used_pins_pads));
+
+	// As soon as the power button is pressed, the CPU must raise the "TON"
+	// pin ("NU2") in order to stay on.
+	gpio_direction_output(SPC20010_TON, 1);
+
+	// Other unused pins to ground.
+	gpio_direction_output(SPC20010_NU1  , 0);
+//	gpio_direction_output(SPC20010_NU2  , 0);
+	gpio_direction_output(SPC20010_NU3  , 0);
+	gpio_direction_output(SPC20010_NU4  , 0);
+	gpio_direction_output(SPC20010_NU5  , 0);
+	gpio_direction_output(SPC20010_NU6  , 0);
+	gpio_direction_output(SPC20010_NU7  , 0);
+	gpio_direction_output(SPC20010_NU8  , 0);
+	gpio_direction_output(SPC20010_NU9  , 0);
+	gpio_direction_output(SPC20010_NU10 , 0);
+	gpio_direction_output(SPC20010_NU11 , 0);
+	gpio_direction_output(SPC20010_NU12 , 0);
+	gpio_direction_output(SPC20010_NU13 , 0);
+}
+
+// LED's
+
+#define LED_PINS_CTRL  NO_PAD_CTRL
+
+iomux_v3_cfg_t const led_pins_pads[] = {
+	MX6_PAD_KEY_ROW4__GPIO_4_15 | MUX_PAD_CTRL(LED_PINS_CTRL), // LED10 - red
+	MX6_PAD_GPIO_4__GPIO_1_4    | MUX_PAD_CTRL(LED_PINS_CTRL), // LED20 - green
+};
+
+#define SPC20010_LED_RED    IMX_GPIO_NR(4, 15)
+#define SPC20010_LED_GREEN  IMX_GPIO_NR(1, 4)
+
+static void spc20010_setup_led_pins(void)
+{
+	imx_iomux_v3_setup_multiple_pads(led_pins_pads, ARRAY_SIZE(led_pins_pads));
+
+	gpio_direction_output(SPC20010_LED_RED  , 1);
+	gpio_direction_output(SPC20010_LED_GREEN, 0);
+}
+
+// 5-KEYS KEYPAD
+
+#define KEYPAD_PINS_CTRL  NO_PAD_CTRL
+
+iomux_v3_cfg_t const keypad_pins_pads[] = {
+	MX6_PAD_DISP0_DAT20__GPIO_5_14 | MUX_PAD_CTRL(KEYPAD_PINS_CTRL), // ITS1
+	MX6_PAD_EIM_DA7__GPIO_3_7      | MUX_PAD_CTRL(KEYPAD_PINS_CTRL), // ITS2
+	MX6_PAD_EIM_A19__GPIO_2_19     | MUX_PAD_CTRL(KEYPAD_PINS_CTRL), // ITS3
+	MX6_PAD_EIM_D16__GPIO_3_16     | MUX_PAD_CTRL(KEYPAD_PINS_CTRL), // ITS4
+	MX6_PAD_DISP0_DAT21__GPIO_5_15 | MUX_PAD_CTRL(KEYPAD_PINS_CTRL), // ITS5
+};
+
+#define SPC20010_ITS1  IMX_GPIO_NR(5, 14)
+#define SPC20010_ITS2  IMX_GPIO_NR(3,  7)
+#define SPC20010_ITS3  IMX_GPIO_NR(2, 19)
+#define SPC20010_ITS4  IMX_GPIO_NR(3, 16)
+#define SPC20010_ITS5  IMX_GPIO_NR(5, 15)
+
+static void spc20010_setup_keypad_pins(void)
+{
+	imx_iomux_v3_setup_multiple_pads(keypad_pins_pads, ARRAY_SIZE(keypad_pins_pads));
+
+	gpio_direction_input(SPC20010_ITS1);
+	gpio_direction_input(SPC20010_ITS2);
+	gpio_direction_input(SPC20010_ITS3);
+	gpio_direction_input(SPC20010_ITS4);
+	gpio_direction_input(SPC20010_ITS5);
+}
+
+// SPI SLAVE SELECTS
+
+#define SPI_SS_PINS_CTRL  NO_PAD_CTRL
+
+iomux_v3_cfg_t const spi_ss_pins_pads[] = {
+
+	MX6_PAD_DISP0_DAT23__GPIO_5_17 | MUX_PAD_CTRL(SPI_SS_PINS_CTRL), // SS1_0
+	MX6_PAD_DISP0_DAT15__GPIO_5_9  | MUX_PAD_CTRL(SPI_SS_PINS_CTRL), // SS1_1
+	MX6_PAD_KEY_ROW2__GPIO_4_11    | MUX_PAD_CTRL(SPI_SS_PINS_CTRL), // SS1_2
+	//
+	MX6_PAD_DISP0_DAT3__GPIO_4_24  | MUX_PAD_CTRL(SPI_SS_PINS_CTRL), // SS3_0
+	MX6_PAD_DISP0_DAT4__GPIO_4_25  | MUX_PAD_CTRL(SPI_SS_PINS_CTRL), // SS3_1
+	MX6_PAD_DISP0_DAT5__GPIO_4_26  | MUX_PAD_CTRL(SPI_SS_PINS_CTRL), // SS3_2
+	MX6_PAD_DISP0_DAT6__GPIO_4_27  | MUX_PAD_CTRL(SPI_SS_PINS_CTRL), // SS3_3
+
+//	MX6_PAD_DISP0_DAT23__ECSPI1_SS0 | MUX_PAD_CTRL(SPI_SS_PINS_CTRL), // SS1_0
+//	MX6_PAD_DISP0_DAT15__ECSPI1_SS1 | MUX_PAD_CTRL(SPI_SS_PINS_CTRL), // SS1_1
+//	MX6_PAD_KEY_ROW2__ECSPI1_SS2    | MUX_PAD_CTRL(SPI_SS_PINS_CTRL), // SS1_2
+//	//
+//	MX6_PAD_DISP0_DAT3__ECSPI3_SS0  | MUX_PAD_CTRL(SPI_SS_PINS_CTRL), // SS3_0
+//	MX6_PAD_DISP0_DAT4__ECSPI3_SS1  | MUX_PAD_CTRL(SPI_SS_PINS_CTRL), // SS3_1
+//	MX6_PAD_DISP0_DAT5__ECSPI3_SS2  | MUX_PAD_CTRL(SPI_SS_PINS_CTRL), // SS3_2
+//	MX6_PAD_DISP0_DAT6__ECSPI3_SS3  | MUX_PAD_CTRL(SPI_SS_PINS_CTRL), // SS3_3
+
+};
+
+#define SPC20010_SS1_0  IMX_GPIO_NR(5, 17)
+#define SPC20010_SS1_1  IMX_GPIO_NR(5,  9)
+#define SPC20010_SS1_2  IMX_GPIO_NR(4, 11)
+//
+#define SPC20010_SS3_0  IMX_GPIO_NR(4, 24)
+#define SPC20010_SS3_1  IMX_GPIO_NR(4, 25)
+#define SPC20010_SS3_2  IMX_GPIO_NR(4, 26)
+#define SPC20010_SS3_3  IMX_GPIO_NR(4, 27)
+
+static void spc20010_setup_spi_ss_pins(void)
+{
+	imx_iomux_v3_setup_multiple_pads(spi_ss_pins_pads, ARRAY_SIZE(spi_ss_pins_pads));
+
+	gpio_direction_output(SPC20010_SS1_0, 1);
+	gpio_direction_output(SPC20010_SS1_1, 1);
+	gpio_direction_output(SPC20010_SS1_2, 1);
+
+	gpio_direction_output(SPC20010_SS3_0, 1);
+	gpio_direction_output(SPC20010_SS3_1, 1);
+	gpio_direction_output(SPC20010_SS3_2, 1);
+	gpio_direction_output(SPC20010_SS3_3, 1);
+}
+
+// MOD-MB-20150427
+// END of changes for Space 20010 carrier board. ///////////////////////////////
+
 int board_early_init_f(void)
 {
+	// MOD-MB-20150427
+	// Changes for Space 20010 carrier board.
+	spc20010_setup_not_used_pins();
+
+	// MOD-MB-20150427
+	// Handle LED's.
+	spc20010_setup_led_pins();
+
+	// MOD-MB-20150427
+	// Handle keypad's pins.
+	spc20010_setup_keypad_pins();
+
+	// MOD-MB-20150427
+	// Handle SPI slave selects.
+	spc20010_setup_spi_ss_pins();
+
 	setup_iomux_uart();
 
 #if defined(CONFIG_VIDEO_IPUV3)
@@ -831,6 +1008,7 @@ int board_early_init_f(void)
 #ifdef CONFIG_CMD_SATA
 	setup_sata();
 #endif
+
 	return 0;
 }
 
@@ -840,7 +1018,7 @@ int board_init(void)
 {
 	/* address of boot parameters */
 	gd->bd->bi_boot_params = PHYS_SDRAM + 0x100;
-	
+
 	/* For kernel 3.0.35 */
 	gd->bd->bi_dram[0].start = PHYS_SDRAM;
 	gd->bd->bi_dram[0].size = ((ulong)CONFIG_DDR_MB * 1024 * 1024);
@@ -931,76 +1109,6 @@ void board_fastboot_setup(void)
 	}
 }
 
-#ifdef CONFIG_ANDROID_RECOVERY
-
-#define GPIO_VOL_DN_KEY IMX_GPIO_NR(5, 14)
-iomux_v3_cfg_t const recovery_key_pads[] = {
-	(MX6_PAD_DISP0_DAT20__GPIO_5_14 | MUX_PAD_CTRL(NO_PAD_CTRL)),
-};
-
-int check_recovery_cmd_file(void)
-{
-	int button_pressed = 0;
-	int recovery_mode = 0;
-
-	recovery_mode = recovery_check_and_clean_flag();
-
-	/* Check Recovery Combo Button press or not. */
-	imx_iomux_v3_setup_multiple_pads(recovery_key_pads,
-		ARRAY_SIZE(recovery_key_pads));
-
-	gpio_direction_input(GPIO_VOL_DN_KEY);
-
-	if (gpio_get_value(GPIO_VOL_DN_KEY) == 0) { /* VOL_DN key is low assert */
-		button_pressed = 1;
-		printf("Recovery key pressed\n");
-	}
-
-	return recovery_mode || button_pressed;
-}
-
-void board_recovery_setup(void)
-{
-	int bootdev = get_boot_device();
-
-	switch (bootdev) {
-#if defined(CONFIG_FASTBOOT_STORAGE_SATA)
-	case SATA_BOOT:
-		if (!getenv("bootcmd_android_recovery"))
-			setenv("bootcmd_android_recovery", "booti sata recovery");
-		break;
-#endif /*CONFIG_FASTBOOT_STORAGE_SATA*/
-#if defined(CONFIG_FASTBOOT_STORAGE_MMC)
-	case SD1_BOOT:
-	case MMC1_BOOT:
-		if (!getenv("bootcmd_android_recovery"))
-			setenv("bootcmd_android_recovery", "booti mmc0 recovery");
-		break;
-	case SD3_BOOT:
-	case MMC3_BOOT:
-		if (!getenv("bootcmd_android_recovery"))
-			setenv("bootcmd_android_recovery", "booti mmc1 recovery");
-		break;
-#endif /*CONFIG_FASTBOOT_STORAGE_MMC*/
-#if defined(CONFIG_FASTBOOT_STORAGE_NAND)
-	case NAND_BOOT:
-		if (!getenv("bootcmd_android_recovery"))
-			setenv("bootcmd_android_recovery",
-				"nand read ${loadaddr} ${recovery_nand_offset} "
-				"${recovery_nand_size};booti ${loadaddr}");
-		break;
-#endif /*CONFIG_FASTBOOT_STORAGE_NAND*/
-	default:
-		printf("Unsupported bootup device for recovery: dev: %d\n",
-			bootdev);
-		return;
-	}
-
-	printf("setup env for recovery..\n");
-	setenv("bootcmd", "run bootcmd_android_recovery");
-}
-#endif /*CONFIG_ANDROID_RECOVERY*/
-
 #endif /*CONFIG_FASTBOOT*/
 
 int checkboard(void)
@@ -1014,6 +1122,21 @@ int checkboard(void)
 #elif defined CONFIG_MX6SOLO
 	printf("Board: i.Core M6S\n");
 #endif
+
+printf("Disp:  ");
+#ifdef CONFIG_VIDEO_IPUV3
+printf("present.\n");
+#else
+printf("NOT present.\n");
+#endif
+
+printf("SATA:  ");
+#ifdef CONFIG_CMD_SATA
+printf("present.\n");
+#else
+printf("NOT present.\n");
+#endif
+
 	return 0;
 }
 
@@ -1071,3 +1194,4 @@ int board_ehci_power(int port, int on)
 	return 0;
 }
 #endif
+
diff --git a/common/hush.c b/common/hush.c
index 61b3fe0..e34f1b0 100644
--- a/common/hush.c
+++ b/common/hush.c
@@ -3227,11 +3227,11 @@ static int parse_stream_outer(struct in_str *inp, int flag)
 	if(bFirstTime)
 		bFirstTime=false;
 	else
-		board_set_backlight(0);
+		//board_set_backlight(0);
 	#else
-	board_set_backlight(0);
+	//board_set_backlight(0);
 	#endif
-	
+
 	return (code != 0) ? 1 : 0;
 #endif /* __U_BOOT__ */
 }
diff --git a/common/main.c b/common/main.c
index 4b1df0c..6c6558a 100644
--- a/common/main.c
+++ b/common/main.c
@@ -72,7 +72,7 @@ void show_boot_progress (int val) __attribute__((weak, alias("__show_boot_progre
 #if defined(CONFIG_UPDATE_TFTP)
 int update_tftp (ulong addr);
 #endif /* CONFIG_UPDATE_TFTP */
- 
+
 //! This function show on u-boot consolle on start-up the version
 //  For setting the version open file mx25_3stack.
 void version_show(void)
@@ -124,9 +124,9 @@ int stringfind (char *str, char *key)
 void check_fec_on_bootargs(void)
 {
   	char *sBootArgs = getenv("bootargs");
-	
+
 	if ( !stringfind (sBootArgs, "fec_mac"))
-	{		
+	{
 		char *sEthAddr = getenv("ethaddr");
 		char sNewEnv[512];
 		if(sEthAddr!=NULL)
@@ -140,8 +140,8 @@ void check_fec_on_bootargs(void)
 		else
 		{
 			printf("WARNING: ***** No MAC address: set ethaddr *****\n");
-		}	
-		
+		}
+
 	}
 }
 
@@ -552,7 +552,7 @@ void main_loop (void)
 	debug ("### main_loop: bootcmd=\"%s\"\n", s ? s : "<UNDEFINED>");
 
 	if (bootdelay != -1 && s && !abortboot(bootdelay)) {
-	board_set_backlight(0);
+	//board_set_backlight(0);
 # ifdef CONFIG_AUTOBOOT_KEYED
 		int prev = disable_ctrlc(1);	/* disable Control C checking */
 # endif
diff --git a/drivers/video/cfb_console.c b/drivers/video/cfb_console.c
index 7afe492..0cf6878 100644
--- a/drivers/video/cfb_console.c
+++ b/drivers/video/cfb_console.c
@@ -1968,7 +1968,7 @@ static void *video_logo(void)
 	__maybe_unused ulong addr;
 	__maybe_unused char *s;
 
-	splash_get_pos(&video_logo_xpos, &video_logo_ypos);
+	//splash_get_pos(&video_logo_xpos, &video_logo_ypos);
 
 #ifdef CONFIG_SPLASH_SCREEN
 	s = getenv("splashimage");
diff --git a/include/configs/mx6_icore_common.h b/include/configs/mx6_icore_common.h
index a628f6f..1210eb1 100644
--- a/include/configs/mx6_icore_common.h
+++ b/include/configs/mx6_icore_common.h
@@ -368,24 +368,24 @@
 #define CONFIG_SYS_I2C_SLAVE            0x8
 
 /* Framebuffer */
-#define CONFIG_VIDEO
-#define CONFIG_VIDEO_IPUV3
-#define CONFIG_CFB_CONSOLE
-#define CONFIG_VGA_AS_SINGLE_DEVICE
-#define CONFIG_SYS_CONSOLE_IS_IN_ENV
-#define CONFIG_SYS_CONSOLE_OVERWRITE_ROUTINE
-#define CONFIG_VIDEO_BMP_RLE8
-#define CONFIG_SPLASH_SCREEN
-#define CONFIG_SPLASH_SCREEN_ALIGN
-#define CONFIG_BMP_16BPP
-#define CONFIG_VIDEO_LOGO
-#define CONFIG_VIDEO_BMP_LOGO
-#ifdef CONFIG_MX6DL
-#define CONFIG_IPUV3_CLK 198000000
-#else
-#define CONFIG_IPUV3_CLK 264000000
-#endif
-#define CONFIG_IMX_HDMI
+//#define CONFIG_VIDEO
+//#define CONFIG_VIDEO_IPUV3
+//#define CONFIG_CFB_CONSOLE
+//#define CONFIG_VGA_AS_SINGLE_DEVICE
+//#define CONFIG_SYS_CONSOLE_IS_IN_ENV
+//#define CONFIG_SYS_CONSOLE_OVERWRITE_ROUTINE
+//#define CONFIG_VIDEO_BMP_RLE8
+//#define CONFIG_SPLASH_SCREEN
+//#define CONFIG_SPLASH_SCREEN_ALIGN
+//#define CONFIG_BMP_16BPP
+//#define CONFIG_VIDEO_LOGO
+//#define CONFIG_VIDEO_BMP_LOGO
+//#ifdef CONFIG_MX6DL
+//#define CONFIG_IPUV3_CLK 198000000
+//#else
+//#define CONFIG_IPUV3_CLK 264000000
+//#endif
+//#define CONFIG_IMX_HDMI
 
 #if defined(CONFIG_ANDROID_SUPPORT)
 #include "mx6qsabreandroid_common.h"
-- 
1.7.9.5

